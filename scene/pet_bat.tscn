[gd_scene load_steps=10 format=2]

[ext_resource path="res://image/player/Ombre.png" type="Texture" id=1]
[ext_resource path="res://image/player/bat.png" type="Texture" id=3]
[ext_resource path="res://image/light/light_ora/light_ora_0.png" type="Texture" id=4]
[ext_resource path="res://image/light/light_ora/light_ora_2.png" type="Texture" id=5]
[ext_resource path="res://image/light/light_ora/light_ora_1.png" type="Texture" id=6]
[ext_resource path="res://code/pet_bat.gd" type="Script" id=7]

[sub_resource type="AnimatedTexture" id=2]
frames = 3
frame_0/texture = ExtResource( 4 )
frame_1/texture = ExtResource( 6 )
frame_1/delay_sec = 0.0
frame_2/texture = ExtResource( 5 )
frame_2/delay_sec = 0.0

[sub_resource type="Animation" id=1]
resource_name = "run"
length = 0.6
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2 ]
}

[sub_resource type="CircleShape2D" id=3]
radius = 48.6621

[node name="pet_bat" type="KinematicBody2D"]
script = ExtResource( 7 )

[node name="Light2D" type="Light2D" parent="."]
texture = SubResource( 2 )
texture_scale = 3.0
mode = 2

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]

[node name="Sprite" type="Sprite" parent="."]
scale = Vector2( 3, 3 )
texture = ExtResource( 3 )
hframes = 3

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
autoplay = "run"
anims/run = SubResource( 1 )

[node name="Ombre" type="Sprite" parent="."]
modulate = Color( 0, 0, 0, 0.6 )
position = Vector2( 0, 8 )
scale = Vector2( 0.5, 0.5 )
texture = ExtResource( 1 )

[node name="detect_player" type="Area2D" parent="."]
collision_layer = 8
collision_mask = 2

[node name="CollisionShape2D" type="CollisionShape2D" parent="detect_player"]
shape = SubResource( 3 )
[connection signal="body_entered" from="detect_player" to="." method="_on_detect_player_body_entered"]
[connection signal="body_exited" from="detect_player" to="." method="_on_detect_player_body_exited"]
